<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ttMensaje.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>296, 27</value>
  </metadata>
  <metadata name="errorIcono.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>396, 27</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnImprimir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>